name: Security Checks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write
  security-events: write
  actions: read

jobs:
  # Запуск приложения и создание сборки
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Клонирование репозитория
      - uses: actions/checkout@v3

      # 2. Установка Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9' # Укажите версию Python вашего приложения

      # 3. Установка зависимостей
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Запуск приложения
      - name: Start Python application
        run: |
          nohup python dsvpwa.py & # Запуск приложения в фоне
          sleep 10 # Дать приложению время запуститься
          curl -v http://127.0.0.1:65413 || exit 1

  # Semgrep: Статический анализ кода
  semgrep:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep:latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Create reports directory
        run: mkdir -p reports

      - name: Semgrep Security Scan with Autofix
        run: |
          semgrep scan \
            --config "auto" \
            --config "p/secrets" \
            --config "p/owasp-top-ten" \
            --output reports/semgrep-results.sarif \
            --sarif \
            --autofix || true
      
      - name: Debug report existence
        run: |
          if [ ! -f reports/semgrep-results.sarif ]; then
            echo "Semgrep did not generate a SARIF report."
            ls -la reports
          fi
      
      - name: Upload SARIF file
        if: always()
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: reports/semgrep-results.sarif

      - name: Upload Semgrep Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: semgrep-results
          path: reports/semgrep-results.sarif
          retention-days: 14

      - name: Create Pull Request with fixes
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ github.token }}
          commit-message: 'fix: auto-fixes from semgrep'
          title: 'Semgrep Auto-fixes'
          body: |
            Автоматические исправления от Semgrep security scan
              
            Этот PR содержит автоматические исправления проблем безопасности, найденных Semgrep.
            Пожалуйста, проверьте изменения перед merge.
          branch: semgrep-fixes
          base: main
          delete-branch: true

  # ZAP: Динамический анализ
  zap_scan:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Start Python application
        run: |
          python dsvpwa.py & 
          echo "Waiting for application to start..."
          sleep 15

      - name: Prepare ZAP Environment
        run: |
          sudo mkdir -p /tmp/zap/
          sudo chown -R $USER:$USER /tmp/zap/
          sudo chmod -R 777 /tmp/zap/
          
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.9.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://127.0.0.1:65413'  # URL вашего приложения
          cmd_options: '-I'
          rules_file_name: '.zap/rules.tsv'
          fail_action: false
          allow_issue_writing: false

      - name: Upload ZAP Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: zap-results
          path: |
            zap-*
            *.html
            retention-days: 5

  # Trivy: Сканирование зависимостей
  trivy_scan:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # 1. Клонирование репозитория
      - uses: actions/checkout@v3

      - name: Create reports directory
        run: mkdir -p reports

      # 2. Установка Trivy
      - name: Install Trivy
        run: |
          curl -sSL https://github.com/aquasecurity/trivy/releases/download/v0.57.1/trivy_0.57.1_Linux-64bit.deb -o trivy.deb
          sudo dpkg -i trivy.deb
          rm trivy.deb
  
      - name: Install cyclonedx-bom
        run: |
          pip install --upgrade pip
          pip install -v cyclonedx-bom
          pip install pycairo
          pip check
          pip show cyclonedx-bom

      - name: Generate SBOM from requirements.txt
        run: cyclonedx-py requirements requirements.txt -o requirements.cdx.json

      - name: Scan SBOM for vulnerabilities
        run: trivy sbom --format cyclonedx requirements.cdx.json --scanners vuln --output reports/sbom-trivy-report.json

      - name: Upload SBOM Trivy Report
        uses: actions/upload-artifact@v3
        with:
          name: sbom-trivy-report
          path: reports/sbom-trivy-report.json
          retention-days: 14

  # pip-audit: Сканирование зависимостей
  pip-audit:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # 1. Клонирование репозитория
      - uses: actions/checkout@v3

      - name: Create reports directory
        run: mkdir -p reports

      - name: Run pip-audit scan
        run: |
          pip install pip-audit
          pip-audit --format=json --output=reports/pip-audit.json || true
                
      # 2. Загрузка отчета о результатах
      - name: Upload Pip-audit Report
        uses: actions/upload-artifact@v3
        with:
          name: pip-audit
          path: reports/pip-audit.json
          retention-days: 14

  # Publish Security Reports
  publish_security_reports:
    needs: [semgrep, zap_scan, trivy_scan, pip-audit]
    runs-on: ubuntu-latest
    steps:
      - name: Create reports directory
        run: mkdir -p combined-reports

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: combined-reports

      - name: Prepare reports
        run: |
          cd combined-reports
          find . -type f -exec mv {} ./ \;
          rm -rf */

      - name: Archive Security Results
        uses: actions/upload-artifact@v3
        with:
          name: security-reports-bundle
          path: combined-reports/*
          retention-days: 14
    
  cleanup:
    needs: publish_security_reports
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Remove temporary artifacts
        uses: geekyeggo/delete-artifact@v2
        with:
          name: |
            semgrep-results
            zap-results
            sbom-trivy-report
            pip-audit

